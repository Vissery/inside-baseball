; LSC2 3 2083 SendRunnerOffField

parameter runneridx
parameter facing

local variable i
local variable ghost: [][RunnerField]

if (gNetplayActive) {
}
if (gRunners[runneridx][R-CUR-BASE] == NONE) {
} else {
    dim array ghost i32[0...0][0...11] swap=2
    array-copy-range ghost gRunners 0 0 0 11 runneridx runneridx 0 11
    if (gPlayEndedReason in [PE-HOME-RUN, PE-GROUND-RULE-DOUBLE, 9, PE-BASE-ON-BALLS, 4, PE-OUT-OF-PLAY, 6, 7]) {
        ghost[R-SPEED] = 6
    } else {
        ghost[R-SPEED] = gRunners[runneridx][R-SPEED]
    }
    array-fill-values gRunners runneridx runneridx 0 20 0 0
    gRunners[runneridx][R-ENTITY] = ghost[R-ENTITY]
    gRunners[runneridx][R-CUR-BASE] = NONE
    gRunners[runneridx][R-DEST-BASE] = NONE
    gRunners[runneridx][R-ORDER] = 999
    if (!gRunners[0][R-DIRECTION] && !gRunners[1][R-DIRECTION] && !gRunners[2][R-DIRECTION] && !gRunners[3][R-DIRECTION]) {
        g_maybe_play_is_ready_to_end = 1
        r_smth_fly_caught_runners_must_return = 0
    }
    gNumRunners = 0
    for i = 0 to 3 ++ {
        if (gRunners[i][R-CUR-BASE] != NONE) {
            ++gNumRunners
        }
    }
    for i = 0 to 4 ++ {
        if (gBases[i][BASE-RUNNERIDX] == runneridx) {
            gBases[i][BASE-RUNNERIDX] = NONE
        }
    }
    run-script-xc3 RunRunnerToSideline [runneridx, facing, ghost]
}
run-script Nop []
free-script
