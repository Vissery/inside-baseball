; SCRP 308 TransformWorldToView

parameter no_rotate

local variable i
local variable ox
local variable oy
local variable oz
local variable x
local variable y
local variable z

pop-discard-2 0 "no trace"
if (no_rotate) {
    for i = gMinTransformEntity to gMaxTransformEntity ++ {
        gView[i][X] = gWorld[i][X] - gCameraPosX
        gView[i][Y] = gWorld[i][Y] - gCameraPosY
        gView[i][Z] = gWorld[i][Z] - gCameraPosZ
    }
} else {
    for i = gMinTransformEntity to gMaxTransformEntity ++ {
        ox = gWorld[i][X] - gCameraPosX
        oy = gWorld[i][Y] - gCameraPosY
        oz = gWorld[i][Z] - gCameraPosZ
        if (gCameraAngleX) {
            x = ox
            y = (gCosCameraAngleX * oy - gSinCameraAngleX * oz) / 100000
            z = (gSinCameraAngleX * oy + gCosCameraAngleX * oz) / 100000
            ox = x
            oy = y
            oz = z
        } else {
            x = ox
            y = oy
            z = oz
        }
        if (gCameraAngleY) {
            x = (gCosCameraAngleY * ox - gSinCameraAngleY * oz) / 100000
            y = oy
            z = (gSinCameraAngleY * ox + gCosCameraAngleY * oz) / 100000
            ox = x
            oy = y
            oz = z
        } else {
            x = ox
            y = oy
            z = oz
        }
        if (gCameraAngleZ) {
            x = (gCosCameraAngleZ * ox - gSinCameraAngleZ * oy) / 100000
            y = (gSinCameraAngleZ * ox + gCosCameraAngleZ * oy) / 100000
            z = oz
            ox = x
            oy = y
            oz = z
        } else {
            x = ox
            y = oy
            z = oz
        }
        gView[i][X] = x
        gView[i][Y] = y
        gView[i][Z] = z
    }
}
pop-discard-2 0 "trace on"
free-script
